<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:helpers="clr-namespace:atomex.Helpers"
             xmlns:lottie="clr-namespace:Lottie.Forms;assembly=Lottie.Forms"
             xmlns:converters="clr-namespace:atomex.Converters"
             x:Class="atomex.SwapInfoPage"
             Title="{helpers:Translate SwapInfoPageTitle}"
             Style="{DynamicResource MainBackgroundStyle}">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:EqualsConverter x:Key="EqualsConverter"/>
            <converters:InverseBoolConverter x:Key="InverseBool"/>
            <converters:AllTrueMultiConverter x:Key="AllTrueConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <ScrollView>
            <StackLayout Spacing="0"
                         Padding="0,20,0,0">
                <Image WidthRequest="40"
                       HeightRequest="40"
                       Margin="20">
                    <Image.Triggers>
                        <DataTrigger TargetType="Image"
                                     Binding="{Binding State}"
                                     Value="In Progress">
                            <Setter Property="Source"
                                    Value="SwapInProgress"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Image"
                                     Binding="{Binding State}"
                                     Value="Completed">
                            <Setter Property="Source"
                                    Value="SwapCompleted"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Image"
                                     Binding="{Binding State}"
                                     Value="Canceled">
                            <Setter Property="Source"
                                    Value="SwapCanceled"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Image"
                                     Binding="{Binding State}"
                                     Value="Refunded">
                            <Setter Property="Source"
                                    Value="SwapCanceled"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Image"
                                     Binding="{Binding State}"
                                     Value="Unsettled">
                            <Setter Property="Source"
                                    Value="SwapCanceled"/>
                        </DataTrigger>
                    </Image.Triggers>
                </Image>
                <Label Text="{Binding State}"
                       FontFamily="{DynamicResource RegularFont}"
                       FontSize="22"
                       HorizontalTextAlignment="Center">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding State}"
                                     Value="In Progress">
                            <Setter Property="TextColor"
                                    Value="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding State}"
                                     Value="Completed">
                            <Setter Property="TextColor"
                                    Value="{AppThemeBinding Dark={StaticResource SuccessTextColorDark}, Light={StaticResource SuccessTextColor}}"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding State}"
                                     Value="Canceled">
                            <Setter Property="TextColor"
                                    Value="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding State}"
                                     Value="Refunded">
                            <Setter Property="TextColor"
                                    Value="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding State}"
                                     Value="Unsettled">
                            <Setter Property="TextColor"
                                    Value="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"/>
                        </DataTrigger>
                    </Label.Triggers>
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="Swap"/>
                            <Span Text=" "/>
                            <Span Text="{Binding State}"/>
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
                <Label Text="{Binding StateDescription}"
                       Padding="10"
                       FontFamily="{DynamicResource RegularFont}"
                       FontSize="14"
                       TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                       HorizontalTextAlignment="Center">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label"
                                     Binding="{Binding State}"
                                     Value="In Progress">
                            <Setter Property="TextColor"
                                    Value="{AppThemeBinding Dark={StaticResource ErrorTextColorDark}, Light={StaticResource ErrorTextColor}}"/>
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
                <Grid Margin="0,10"
                      ColumnSpacing="0"
                      RowSpacing="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="80" />
                        <RowDefinition Height="20" />
                        <RowDefinition Height="15" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="4*" />
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="4*" />
                    </Grid.ColumnDefinitions>
                    <Image Source="{Binding FromCurrencyCode}"
                           Margin="0,10"/>
                    <Image Source="ConvertArrow"
                           Grid.Column="1"
                           WidthRequest="40"
                           VerticalOptions="CenterAndExpand"/>
                    <Image Grid.Column="2"
                           Source="{Binding ToCurrencyCode}"
                           Margin="0,10"/>
                    <Label Grid.Row="1"
                           Text="{Binding FromCurrencyCode}"
                           FontFamily="{DynamicResource RegularFont}"
                           FontSize="16"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="End"
                           TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                    <Label Text="{Binding ToCurrencyCode}"
                           FontFamily="{DynamicResource RegularFont}"
                           FontSize="16"
                           Grid.Row="1"
                           Grid.Column="2"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Center"
                           TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"/>
                    <Label Grid.Row="2"
                           FontFamily="{DynamicResource RegularFont}"
                           FontSize="12"
                           Text="{Binding FromAmount}"
                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Start"/>
                    <Label Grid.Row="2"
                           Grid.Column="2"
                           FontFamily="{DynamicResource RegularFont}"
                           FontSize="12"
                           Text="{Binding ToAmount}"
                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                           HorizontalTextAlignment="Center"
                           VerticalTextAlignment="Start"/>
                </Grid>

                <Grid HorizontalOptions="FillAndExpand"
                      ColumnSpacing="0"
                      RowSpacing="0"
                      BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1" />
                        <RowDefinition Height="40" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*" />
                        <ColumnDefinition Width="5*" />
                    </Grid.ColumnDefinitions>
                    <StackLayout Grid.ColumnSpan="2"
                                 Style="{DynamicResource SeparatorStyle}"/>
                    <Button Grid.Row="1"
                            CornerRadius="0"
                            Text="Progress"
                            TextTransform="Uppercase"
                            FontFamily="{DynamicResource BoldFont}"
                            FontSize="14"
                            Clicked="OnButtonClicked"
                            CommandParameter="SwapProgress"
                            x:Name="SwapProgressButton"
                            BackgroundColor="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="SwapInfoStates">
                                <VisualState Name="SwapProgress">
                                    <VisualState.Setters>
                                        <Setter Property="TextColor"
                                                Value="{AppThemeBinding Dark={StaticResource HintTextColorDark}, Light={StaticResource HintTextColor}}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState Name="SwapDetails">
                                    <VisualState.Setters>
                                        <Setter Property="TextColor"
                                                Value="{AppThemeBinding Dark={StaticResource DisabledButtonTextColorDark}, Light={StaticResource DisabledButtonTextColor}}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Button>
                    <Button Grid.Row="1"
                            Grid.Column="1"
                            CornerRadius="0"
                            Text="Details"
                            TextTransform="Uppercase"
                            FontFamily="{DynamicResource BoldFont}"
                            FontSize="14"
                            Clicked="OnButtonClicked"
                            CommandParameter="SwapDetails"
                            x:Name="SwapDetailsButton"
                            BackgroundColor="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="SwapInfoStates">
                                <VisualState Name="SwapProgress">
                                    <VisualState.Setters>
                                        <Setter Property="TextColor"
                                                Value="{AppThemeBinding Dark={StaticResource DisabledButtonTextColorDark}, Light={StaticResource DisabledButtonTextColor}}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState Name="SwapDetails">
                                    <VisualState.Setters>
                                        <Setter Property="TextColor"
                                                Value="{AppThemeBinding Dark={StaticResource HintTextColorDark}, Light={StaticResource HintTextColor}}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Button>
                    <StackLayout Grid.Row="2"
                                 x:Name="ProgressUnderline"
                                 Style="{DynamicResource SeparatorStyle}"
                                 VerticalOptions="End">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="SwapInfoStates">
                                <VisualState Name="SwapProgress">
                                    <VisualState.Setters>
                                        <Setter Property="BackgroundColor"
                                                Value="{AppThemeBinding Dark={StaticResource HintTextColorDark}, Light={StaticResource HintTextColor}}"/>
                                        <Setter Property="HeightRequest"
                                                Value="2"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState Name="SwapDetails">
                                    <VisualState.Setters>
                                        <Setter Property="BackgroundColor"
                                                Value="{AppThemeBinding Dark={StaticResource ListViewSeparatorColorDark}, Light={StaticResource ListViewSeparatorColor}}"/>
                                        <Setter Property="HeightRequest"
                                                Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </StackLayout>
                    <StackLayout Grid.Row="2"
                                 Grid.Column="1"
                                 x:Name="DetailsUnderline"
                                 Style="{DynamicResource SeparatorStyle}"
                                 VerticalOptions="End">
                        <VisualStateManager.VisualStateGroups>
                             <VisualStateGroup Name="SwapInfoStates">
                                <VisualState Name="SwapProgress">
                                    <VisualState.Setters>
                                        <Setter Property="BackgroundColor"
                                                Value="{AppThemeBinding Dark={StaticResource ListViewSeparatorColorDark}, Light={StaticResource ListViewSeparatorColor}}"/>
                                        <Setter Property="HeightRequest"
                                                Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState Name="SwapDetails">
                                    <VisualState.Setters>
                                        <Setter Property="BackgroundColor"
                                                Value="{AppThemeBinding Dark={StaticResource HintTextColorDark}, Light={StaticResource HintTextColor}}"/>
                                        <Setter Property="HeightRequest"
                                                Value="2"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </StackLayout>
                </Grid>
                <StackLayout Padding="10,20"
                             x:Name="ProgressTab">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup Name="SwapInfoStates">
                            <VisualState Name="SwapProgress">
                                <VisualState.Setters>
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState Name="SwapDetails">
                                <VisualState.Setters>
                                    <Setter Property="IsVisible"
                                            Value="False"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid HorizontalOptions="FillAndExpand"
                          ColumnSpacing="0"
                          RowSpacing="0"
                          BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="24" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="8*" />
                        </Grid.ColumnDefinitions>
                        <Image Source="ic_status__empty"
                               WidthRequest="16"
                               HeightRequest="16"
                               VerticalOptions="Start"
                               HorizontalOptions="Center"/>
                        <Image WidthRequest="16"
                               HeightRequest="16"
                               VerticalOptions="Start"
                               HorizontalOptions="Center"
                               IsVisible="False">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Status}"
                                             Value="Exchanging">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                    <Setter Property="Source"
                                            Value="ic_status__completed"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Status}"
                                             Value="Completion">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                    <Setter Property="Source"
                                            Value="ic_status__completed"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Completed">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                    <Setter Property="Source"
                                            Value="ic_status__completed"/>
                                </DataTrigger>
                                <MultiTrigger TargetType="Image">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding State}"
                                                          Value="Canceled"/>
                                        <BindingCondition Binding="{Binding Status}"
                                                          Value="Initialization"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Source"
                                            Value="ic_status__canceled"/>
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </MultiTrigger>
                                <MultiTrigger TargetType="Image">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding State}"
                                                          Value="Refunded"/>
                                        <BindingCondition Binding="{Binding Status}"
                                                          Value="Initialization"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Source"
                                            Value="ic_status__canceled"/>
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </MultiTrigger>
                                <MultiTrigger TargetType="Image">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding State}"
                                                          Value="Unsettled"/>
                                        <BindingCondition Binding="{Binding Status}"
                                                          Value="Initialization"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Source"
                                            Value="ic_status__canceled"/>
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </MultiTrigger>
                            </Image.Triggers>
                        </Image>
                        <lottie:AnimationView WidthRequest="16"
                                              HeightRequest="16"
                                              Animation="{AppThemeBinding Dark=loader_dark__blue.json, Light=loader_light__blue.json}"
                                              AnimationSource="AssetOrBundle"
                                              ImageAssetsFolder="Assets/Animations"
                                              AutoPlay="True"
                                              RepeatMode="Infinite"
                                              Speed="1"
                                              VerticalOptions="Start"
                                              HorizontalOptions="Center">
                            <lottie:AnimationView.IsVisible>
                                <MultiBinding Converter="{StaticResource AllTrueConverter}">
                                    <Binding Path="Status"
                                             Mode="OneWay"
                                             Converter="{StaticResource EqualsConverter}"
                                             ConverterParameter="Initialization"/>
                                    <Binding Path="State"
                                             Mode="OneWay"
                                             Converter="{StaticResource EqualsConverter}"
                                             ConverterParameter="In Progress"/>
                                </MultiBinding>
                            </lottie:AnimationView.IsVisible>
                        </lottie:AnimationView>
                        <Label Text="Initialization"
                               Grid.Column="1"
                               FontFamily="{DynamicResource RegularFont}"
                               FontSize="16"
                               TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                               VerticalTextAlignment="Start"/>
                        <Image Grid.Row="1"
                               Source="ic_line__empty"
                               VerticalOptions="FillAndExpand"
                               HorizontalOptions="Center"/>
                        <Image Grid.Row="1"
                               Source="ic_line__full"
                               VerticalOptions="FillAndExpand"
                               HorizontalOptions="Center">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Status}"
                                             Value="Initialization">
                                    <Setter Property="IsVisible"
                                            Value="False"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Completed">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>
                        <StackLayout Grid.Row="1"
                                     Grid.Column="1"
                                     Spacing="0"
                                     BackgroundColor="Transparent"
                                     BindableLayout.ItemsSource="{Binding InitStatusMessages}">
                            <BindableLayout.ItemTemplate>
                                <DataTemplate>
                                    <Label Text="{Binding .}"
                                           FontFamily="{DynamicResource RegularFont}"
                                           FontSize="12"
                                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                           VerticalTextAlignment="Start"/>
                                </DataTemplate>
                            </BindableLayout.ItemTemplate>
                        </StackLayout>
                    </Grid>
                    <Grid HorizontalOptions="FillAndExpand"
                          ColumnSpacing="0"
                          RowSpacing="0"
                          BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="24" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="8*" />
                        </Grid.ColumnDefinitions>
                        <Image Source="ic_status__empty"
                               WidthRequest="16"
                               HeightRequest="16"
                               VerticalOptions="Start"
                               HorizontalOptions="Center"/>
                        <Image WidthRequest="16"
                               HeightRequest="16"
                               VerticalOptions="Start"
                               HorizontalOptions="Center"
                               IsVisible="False">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Status}"
                                             Value="Completion">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                    <Setter Property="Source"
                                            Value="ic_status__completed"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Completed">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                    <Setter Property="Source"
                                            Value="ic_status__completed"/>
                                </DataTrigger>
                                <MultiTrigger TargetType="Image">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding Status}"
                                                          Value="Completion"/>
                                        <BindingCondition Binding="{Binding State}"
                                                          Value="In Progress"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Source"
                                            Value="ic_status__completed"/>
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </MultiTrigger>
                                <MultiTrigger TargetType="Image">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding State}"
                                                          Value="Canceled"/>
                                        <BindingCondition Binding="{Binding Status}"
                                                          Value="Initialization"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Source"
                                            Value="ic_status__canceled"/>
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </MultiTrigger>
                                <MultiTrigger TargetType="Image">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding State}"
                                                          Value="Canceled"/>
                                        <BindingCondition Binding="{Binding Status}"
                                                          Value="Exchanging"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Source"
                                            Value="ic_status__canceled"/>
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </MultiTrigger>
                                <MultiTrigger TargetType="Image">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding State}"
                                                          Value="Refunded"/>
                                        <BindingCondition Binding="{Binding Status}"
                                                          Value="Exchanging"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Source"
                                            Value="ic_status__canceled"/>
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </MultiTrigger>
                                <MultiTrigger TargetType="Image">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding State}"
                                                          Value="Unsettled"/>
                                        <BindingCondition Binding="{Binding Status}"
                                                          Value="Exchanging"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Source"
                                            Value="ic_status__canceled"/>
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </MultiTrigger>
                            </Image.Triggers>
                        </Image>
                        <lottie:AnimationView WidthRequest="16"
                                              HeightRequest="16"
                                              Animation="{AppThemeBinding Dark=loader_dark__blue.json, Light=loader_light__blue.json}"
                                              AnimationSource="AssetOrBundle"
                                              ImageAssetsFolder="Assets/Animations"
                                              AutoPlay="True"
                                              RepeatMode="Infinite"
                                              Speed="1"
                                              VerticalOptions="Start"
                                              HorizontalOptions="Center">
                            <lottie:AnimationView.IsVisible>
                                <MultiBinding Converter="{StaticResource AllTrueConverter}">
                                    <Binding Path="Status"
                                             Mode="OneWay"
                                             Converter="{StaticResource EqualsConverter}"
                                             ConverterParameter="Exchanging"/>
                                    <Binding Path="State"
                                             Mode="OneWay"
                                             Converter="{StaticResource EqualsConverter}"
                                             ConverterParameter="In Progress"/>
                                </MultiBinding>
                            </lottie:AnimationView.IsVisible>
                        </lottie:AnimationView>
                        <Label Text="Exchanging"
                               Grid.Column="1"
                               FontFamily="{DynamicResource RegularFont}"
                               FontSize="16"
                               TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                               VerticalTextAlignment="Start"/>
                        <Image Grid.Row="1"
                               Source="ic_line__empty"
                               VerticalOptions="FillAndExpand"
                               HorizontalOptions="Center"/>
                        <Image Grid.Row="1"
                               Source="ic_line__full"
                               VerticalOptions="FillAndExpand"
                               HorizontalOptions="Center"
                               IsVisible="False">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding Status}"
                                             Value="Completion">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Completed">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>
                        <StackLayout Grid.Row="1"
                                     Grid.Column="1"
                                     Spacing="0"
                                     BackgroundColor="Transparent"
                                     BindableLayout.ItemsSource="{Binding ExchangeStatusMessages}">
                            <BindableLayout.ItemTemplate>
                                <DataTemplate>
                                    <Label Text="{Binding .}"
                                           FontFamily="{DynamicResource RegularFont}"
                                           FontSize="12"
                                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                           VerticalTextAlignment="Start"/>
                                </DataTemplate>
                            </BindableLayout.ItemTemplate>
                        </StackLayout>
                    </Grid>
                    <Grid HorizontalOptions="FillAndExpand"
                          ColumnSpacing="0"
                          RowSpacing="0"
                          BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="24" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="8*" />
                        </Grid.ColumnDefinitions>
                        <Image Source="ic_status__empty"
                               WidthRequest="16"
                               HeightRequest="16"
                               VerticalOptions="Start"
                               HorizontalOptions="Center"/>
                        <Image WidthRequest="16"
                               HeightRequest="16"
                               VerticalOptions="Start"
                               HorizontalOptions="Center"
                               IsVisible="False">
                            <Image.Triggers>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Completed">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                    <Setter Property="Source"
                                            Value="ic_status__completed"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Canceled">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                    <Setter Property="Source"
                                            Value="ic_status__canceled"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Unsettled">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                    <Setter Property="Source"
                                            Value="ic_status__canceled"/>
                                </DataTrigger>
                                <DataTrigger TargetType="Image"
                                             Binding="{Binding State}"
                                             Value="Refunded">
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                    <Setter Property="Source"
                                            Value="ic_status__canceled"/>
                                </DataTrigger>
                            </Image.Triggers>
                        </Image>
                        <lottie:AnimationView WidthRequest="16"
                                              HeightRequest="16"
                                              Animation="{AppThemeBinding Dark=loader_dark__blue.json, Light=loader_light__blue.json}"
                                              AnimationSource="AssetOrBundle"
                                              ImageAssetsFolder="Assets/Animations"
                                              AutoPlay="True"
                                              RepeatMode="Infinite"
                                              Speed="1"
                                              VerticalOptions="Start"
                                              HorizontalOptions="Center">
                            <lottie:AnimationView.IsVisible>
                                <MultiBinding Converter="{StaticResource AllTrueConverter}">
                                    <Binding Path="Status"
                                             Mode="OneWay"
                                             Converter="{StaticResource EqualsConverter}"
                                             ConverterParameter="Completion"/>
                                    <Binding Path="State"
                                             Mode="OneWay"
                                             Converter="{StaticResource EqualsConverter}"
                                             ConverterParameter="In Progress"/>
                                </MultiBinding>
                            </lottie:AnimationView.IsVisible>
                        </lottie:AnimationView>
                        <Label Text="Completion"
                               Grid.Column="1"
                               FontFamily="{DynamicResource RegularFont}"
                               FontSize="16"
                               TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                               VerticalTextAlignment="Start"/>
                        <StackLayout Grid.Row="1"
                                     Grid.Column="1"
                                     Spacing="0"
                                     BackgroundColor="Transparent"
                                     BindableLayout.ItemsSource="{Binding CompletionStatusMessages}">
                            <BindableLayout.ItemTemplate>
                                <DataTemplate>
                                    <Label Text="{Binding .}"
                                           FontFamily="{DynamicResource RegularFont}"
                                           FontSize="12"
                                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                           VerticalTextAlignment="Start"/>
                                </DataTemplate>
                            </BindableLayout.ItemTemplate>
                        </StackLayout>
                    </Grid>
                </StackLayout>

                <StackLayout Padding="20"
                             x:Name="DetailsTab">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup Name="SwapInfoStates">
                            <VisualState Name="SwapProgress">
                                <VisualState.Setters>
                                    <Setter Property="IsVisible"
                                            Value="False"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState Name="SwapDetails">
                                <VisualState.Setters>
                                    <Setter Property="IsVisible"
                                            Value="True"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <StackLayout Orientation="Horizontal"
                                 Padding="20,5">
                        <Label Text="Price:"
                               FontFamily="{DynamicResource RegularFont}"
                               FontSize="14"
                               TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                               VerticalTextAlignment="Center"
                               HorizontalTextAlignment="Start"/>
                        <Label Text="{Binding Price}"
                               FontFamily="{DynamicResource RegularFont}"
                               FontSize="14"
                               TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                               HorizontalOptions="FillAndExpand"
                               VerticalTextAlignment="Center"
                               HorizontalTextAlignment="End"/>
                    </StackLayout>
                </StackLayout>
            </StackLayout>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>
