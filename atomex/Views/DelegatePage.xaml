<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:controls="clr-namespace:atomex.CustomElements" xmlns:ffimageloadingsvg="clr-namespace:FFImageLoading.Svg.Forms;assembly=FFImageLoading.Svg.Forms"
             xmlns:resources="clr-namespace:atomex.Resources"
             x:Class="atomex.DelegatePage"
             Title="{x:Static resources:AppResources.DelegatePageTitle}"
             BackgroundColor="{DynamicResource MainBackgroundColor}">
        <StackLayout x:Name="Content"
                     VerticalOptions="FillAndExpand"
                     Margin="20">
            <Label Text="{x:Static resources:AppResources.DelegateToBakeryLabel}"
                   FontFamily="{DynamicResource RegularFont}"
                   FontSize="20"
                   HorizontalTextAlignment="Center"
                   Padding="20,10"/>
            <Grid VerticalOptions="Fill"
                  HorizontalOptions="Fill"
                  ColumnSpacing="0"
                  RowSpacing="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                    <RowDefinition Height="40" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="4.5*" />
                    <ColumnDefinition Width="2.5*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <Frame Grid.ColumnSpan="4"
                       Grid.RowSpan="2"
                       HasShadow="False"
                       Padding="0"
                       x:Name="BakerFrame">
                    <Picker x:Name="pickerFrom"
                            ItemsSource="{Binding FromBakersList}"
                            ItemDisplayBinding="{Binding Name}"
                            SelectedItem="{Binding BakerViewModel}"
                            VerticalOptions="FillAndExpand"
                            Focused="OnBakerPickerFocused"
                            Unfocused="OnBakerPickerFocused"
                            TextColor="#ffffff">
                    </Picker>
                </Frame>
                <Image Grid.RowSpan="2"
                       Source="{Binding BakerViewModel.Logo}"
                       Margin="10"
                       IsEnabled="False"/>
                <StackLayout Grid.Column="1"
                             Grid.RowSpan="2"
                             IsEnabled="False"
                             VerticalOptions="Center"
                             Spacing="0">
                    <Label Text="{Binding BakerViewModel.Name}"
                           VerticalTextAlignment="End"
                           FontFamily="{DynamicResource BoldFont}"
                           FontSize="20"/>
                    <Label VerticalTextAlignment="Start"
                           FontFamily="{DynamicResource LightFont}"
                           FontSize="14">
                        <Label.FormattedText>
                            <FormattedString>
                                <Span Text="{Binding BakerViewModel.Fee}"/>
                                <Span Text=" % "/>
                                <Span Text="(min "/>
                                <Span Text="{Binding BakerViewModel.MinDelegation}"/>
                                <Span Text=" tez)"/>
                            </FormattedString>
                        </Label.FormattedText>
                    </Label>
                </StackLayout>
                <StackLayout Grid.Column="2"
                             Grid.RowSpan="2"
                             IsEnabled="False"
                             VerticalOptions="Center"
                             Padding="10,0,0,0"
                             Spacing="0">
                    <Label Text="{x:Static resources:AppResources.Available}"
                           VerticalTextAlignment="End"
                           HorizontalTextAlignment="End"
                           FontFamily="{DynamicResource LightFont}"
                           FontSize="14"/>
                    <Label Text="{Binding BakerViewModel.StakingAvailable, StringFormat='{0:0.##}'}"
                           VerticalTextAlignment="Start"
                           HorizontalTextAlignment="End"
                           FontFamily="{DynamicResource LightFont}"
                           FontSize="14"/>
                </StackLayout>
                <ffimageloadingsvg:SvgCachedImage Grid.Column="3"
                                                  Grid.RowSpan="2"
                                                  Source="Down-arrow-2.svg"
                                                  Margin="0,34"
                                                  IsEnabled="False"/>
            </Grid>
            <StackLayout Orientation="Horizontal"
                         Spacing="0"
                         HeightRequest="80">
                <Frame Style="{DynamicResource FrameCaptionStyle}"
                       WidthRequest="60"
                       Padding="20">
                    <Label Text="{x:Static resources:AppResources.ToAddressLabel}"
                           Style="{DynamicResource LabelFrameCaptionStyle}"/>
                </Frame>
                <Frame HasShadow="False"
                       x:Name="ToAddressFrame"
                       Padding="0"
                       BorderColor="LightGray"
                       HorizontalOptions="FillAndExpand">
                    <controls:CustomEntry x:Name="ToAddressEntry"
                                          Keyboard="Text"
                                          Style="{DynamicResource EntryStyle}"
                                          Focused="OnToAddressEntryFocused"
                                          Unfocused="OnToAddressEntryFocused"
                                          HorizontalOptions="FillAndExpand"
                                          Text="{Binding Address}"/>
                </Frame>
            </StackLayout>
            <Grid VerticalOptions="Fill"
                  HorizontalOptions="Fill"
                  RowSpacing="0"
                  ColumnSpacing="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                    <RowDefinition Height="40" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="8*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <Frame Style="{DynamicResource FrameCaptionStyle}"
                       Grid.RowSpan="2"
                       Padding="20">
                    <Label Text="{x:Static resources:AppResources.FromAddressLabel}"
                           Style="{DynamicResource LabelFrameCaptionStyle}"/>
                </Frame>
                <Frame Grid.RowSpan="2"
                       Grid.Column="1"
                       Grid.ColumnSpan="3"
                       HasShadow="False"
                       x:Name="FromAddressFrame"
                       Padding="0"
                       BorderColor="LightGray">
                    <Picker ItemsSource="{Binding FromAddressList}"
                            ItemDisplayBinding="{Binding Address}"
                            SelectedItem="{Binding WalletAddressViewModel}"
                            FontSize="14"
                            Focused="OnFromAddressPickerFocused"
                            Unfocused="OnFromAddressPickerFocused"
                            TextColor="#ffffff"/>
                </Frame>
                <Label Grid.Row="0"
                       Grid.Column="1"
                       Grid.ColumnSpan="2"
                       Text="{Binding WalletAddressViewModel.WalletAddress.Address}"
                       FontFamily="{DynamicResource RegularFont}"
                       LineBreakMode="MiddleTruncation"
                       Padding="10,0"
                       VerticalTextAlignment="End"
                       IsEnabled="False"/>
                <Label Grid.Row="1"
                       Grid.Column="1"
                       Grid.ColumnSpan="2"
                       Padding="15,0"
                       HorizontalTextAlignment="End"
                       VerticalTextAlignment="Center"
                       FontFamily="{DynamicResource ItalicFont}"
                       TextColor="{DynamicResource HintTextColor}"
                       IsEnabled="False">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{x:Static resources:AppResources.Balance}"/>
                            <Span Text=" "/>
                            <Span Text="{Binding WalletAddressViewModel.WalletAddress.Balance, StringFormat='{0:0.#####}'}"/>
                            <Span Text=" xtz"/>
                    </FormattedString>
                    </Label.FormattedText>
                </Label>
                <StackLayout Grid.Column="3"
                             Grid.RowSpan="2">
                     <ffimageloadingsvg:SvgCachedImage Source="Down-arrow-2.svg"
                                                       Margin="6,34"
                                                       IsEnabled="False"/>
                </StackLayout>
               
            </Grid>
            <StackLayout Orientation="Horizontal"
                         Spacing="0">
                <Frame Style="{DynamicResource FrameCaptionStyle}"
                       WidthRequest="60"
                       Padding="20">
                    <Label Text="{x:Static resources:AppResources.FeeLabel}"
                           Style="{DynamicResource LabelFrameCaptionStyle}"/>
                </Frame>
                <Frame HasShadow="False"
                       Padding="0"
                       x:Name="FeeFrame"
                       BorderColor="LightGray"
                       HorizontalOptions="FillAndExpand">
                    <StackLayout Orientation="Horizontal">
                        <controls:CustomEntry Style="{DynamicResource EntryStyle}"
                                              x:Name="Fee"
                                              Keyboard="Numeric"
                                              Focused="OnFeeEntryFocused"
                                              Unfocused="OnFeeEntryFocused">
                            <controls:CustomEntry.Triggers>
                                <DataTrigger TargetType="controls:CustomEntry"
                                             Binding="{Binding UseDefaultFee}"
                                             Value="True">
                                    <Setter Property="IsReadOnly"
                                            Value="True"/>
                                    <Setter Property="TextColor"
                                            Value="Gray"/>
                                </DataTrigger>
                                <DataTrigger TargetType="controls:CustomEntry"
                                             Binding="{Binding UseDefaultFee}"
                                             Value="False">
                                    <Setter Property="IsReadOnly"
                                            Value="False"/>
                                    <Setter Property="TextColor"
                                            Value="Black"/>
                                </DataTrigger>
                            </controls:CustomEntry.Triggers>
                        </controls:CustomEntry>
                        <Label Text="{Binding FeeInBase, StringFormat='({0:0.##} $)'}"
                               TextColor="Gray"
                               VerticalTextAlignment="Center"
                               Padding="20,0"/>
                    </StackLayout>
                </Frame>
            </StackLayout>
            <StackLayout Orientation="Horizontal"
                         Padding="20">
                <Label Text="{x:Static resources:AppResources.UseDefaultFeeLabel}"
                       FontAttributes="{DynamicResource RegularFont}"
                       FontSize="18"
                       VerticalTextAlignment="Center"
                       HorizontalTextAlignment="Center"/>
                <Switch OnColor="{DynamicResource MainButtonBackgroundColor}"
                        IsToggled="{Binding UseDefaultFee}"
                        HorizontalOptions="EndAndExpand"/>
            </StackLayout>
            <RelativeLayout>
                <Button Text="{x:Static resources:AppResources.NextButton}"
                        x:Name="NextButton"
                        Style="{DynamicResource MainButtonStyle}"
                        RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1}"
                        Clicked="OnNextButtonClicked"/>
                <ActivityIndicator x:Name="ValidatingLoader"
	                               RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToView, ElementName=NextButton, Property=Height, Factor=0.5, Constant=-10}"
                                   RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToView, ElementName=NextButton, Property=Width, Factor=0.5}"
                                   Scale="2"
                                   IsEnabled="False"
                                   Color="White"/>
            </RelativeLayout>
        </StackLayout>
                <!--<RelativeLayout VerticalOptions="FillAndExpand">
        <ActivityIndicator x:Name="ValidatingLoader"
                            RelativeLayout.XConstraint= "{ConstraintExpression Type=RelativeToParent, Property=Width, Factor = .5}"
	             	        RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor =.5}"
                            Scale="3"
                            Color="Black"/>
    </RelativeLayout>-->
</ContentPage>