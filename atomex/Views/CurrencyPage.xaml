<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="atomex.CurrencyPage"
             Title="{Binding Currency.Description}"
             BackgroundColor="{DynamicResource MainBackgroundColor}">
    <StackLayout>
        <SwipeView BackgroundColor="{DynamicResource MainBackgroundColor}">
            <SwipeView.TopItems>
                <SwipeItems Mode="Execute">
                    <SwipeItem Invoked="SwipeDown"/>
                </SwipeItems>
            </SwipeView.TopItems>
            <StackLayout BackgroundColor="{DynamicResource MainBackgroundColor}">
                <Label x:Name="LoaderLabel"
                       Text="Balance updating..."
                       TextColor="{DynamicResource HintTextColor}"
                       FontFamily="{DynamicResource ItalicFont}"
                       HorizontalTextAlignment="Center"
                       VerticalTextAlignment="Center"
                       IsVisible="False"
                       Margin="0,20,0,10"/>
                <ActivityIndicator x:Name="Loader"
                                   Color="{DynamicResource HintTextColor}"
                                   IsVisible="False"/>
                <Image Source="{Binding CurrencyCode}"
                       HeightRequest="96"
                       WidthRequest="96"
                       Margin="0,30,0,20" />
                <Label Text="{Binding AvailableAmount}"
                       x:Name="AvailableAmountLabel"
                       HorizontalOptions="Center"
                       FontSize="20"
                       FontFamily="{DynamicResource BoldFont}">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{Binding AvailableAmount}"/>
                            <Span Text=" " /> 
                            <Span Text="{Binding CurrencyCode}"/>
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
                <Label FontFamily="{DynamicResource RegularFont}"
                       TextColor="{DynamicResource AdditionalTextColor}"
                       HorizontalOptions="Center">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="{Binding Cost, StringFormat='{0:0.##}'}"/>
                            <Span Text=" $"/>
                        </FormattedString>
                    </Label.FormattedText>
                </Label>
                <StackLayout Orientation="Horizontal"
                             HorizontalOptions="CenterAndExpand"
                             Margin="10,20">
                    <StackLayout>
                        <ImageButton Source="SendIcon"
                                     Margin="10"
                                     HeightRequest="40"
                                     WidthRequest="40"
                                     HorizontalOptions="CenterAndExpand"
                                     VerticalOptions="CenterAndExpand"
                                     Clicked="ShowSendPage"/>
                        <Label Text="Send"
                               FontAttributes="Bold"
                               HorizontalOptions="CenterAndExpand"
                               VerticalOptions="CenterAndExpand" />
                    </StackLayout>
                    <StackLayout>
                        <ImageButton Source="ReceiveIcon"
                                     Margin="10"
                                     HeightRequest="40"
                                     WidthRequest="40"
                                     HorizontalOptions="CenterAndExpand"
                                     VerticalOptions="CenterAndExpand"
                                     Clicked="ShowReceivePage"/>
                        <Label Text="Receive"
                               FontAttributes="Bold"
                               HorizontalOptions="Center"
                               VerticalOptions="CenterAndExpand" />
                    </StackLayout>
                    <StackLayout>
                        <ImageButton Source="ConversionIcon"
                                     Margin="10"
                                     HeightRequest="40"
                                     WidthRequest="40"
                                     HorizontalOptions="CenterAndExpand"
                                     VerticalOptions="CenterAndExpand"
                                     Clicked="ShowConversionPage"/>
                        <Label Text="Convert"
                               FontAttributes="Bold"
                               HorizontalOptions="Center"
                               VerticalOptions="CenterAndExpand" />
                    </StackLayout>
                    <StackLayout x:Name="DelegateOption"
                                 IsVisible="false">
                        <ImageButton Source="DelegateIcon"
                                     Margin="10"
                                     HeightRequest="40"
                                     WidthRequest="40"
                                     HorizontalOptions="CenterAndExpand"
                                     VerticalOptions="CenterAndExpand"
                                     Clicked="ShowDelegationPage"/>
                        <Label Text="Delegate"
                               FontAttributes="Bold"
                               HorizontalOptions="Center"
                               VerticalOptions="CenterAndExpand"/>
                    </StackLayout>
                </StackLayout>
            </StackLayout>
        </SwipeView>
        <ListView ItemsSource="{Binding GroupedTransactions}"
                  BackgroundColor="{DynamicResource MainBackgroundColor}"
                  IsGroupingEnabled="True"
                  ItemTapped="OnListViewItemTapped"
                  HasUnevenRows="True"
                  SeparatorVisibility="None"
                  Footer="">
            <ListView.Triggers>
                <DataTrigger TargetType="ListView"
                             Binding="{Binding GroupedTransactions.Count}"
                             Value="0">
                    <Setter Property="IsVisible"
                            Value="False"/>
                </DataTrigger>
            </ListView.Triggers>
            <ListView.GroupHeaderTemplate>
                <DataTemplate>
                    <ViewCell Height="20">
                        <Label Text="{Binding Date, StringFormat='{}{0:dd.MM.yyyy}'}"
                               BackgroundColor="{DynamicResource AdditionalBackgroundColor}"
                               TextColor="{DynamicResource AdditionalTextColor}"
                               Padding="10,0"
                               FontSize="12"
                               VerticalTextAlignment="Center"
                               VerticalOptions="CenterAndExpand"
                               />
                     </ViewCell>
                </DataTemplate>
            </ListView.GroupHeaderTemplate>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <ViewCell Height="60">
                        <Grid RowSpacing="0"
                              ColumnSpacing="0"
                              VerticalOptions="Center"
                              Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="20" />
                                <RowDefinition Height="20" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1.5*" />
                                <ColumnDefinition Width="5*" />
                                <ColumnDefinition Width="3.5*" />
                            </Grid.ColumnDefinitions>
                            <Image Grid.RowSpan="2"
                                   Source="SendIcon">
                                <Image.Triggers>
                                    <DataTrigger TargetType="Image"
                                                 Binding="{Binding Type}"
                                                 Value="Input">
                                        <Setter Property="Source"
                                                Value="ReceiveIcon"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Image"
                                                 Binding="{Binding Type}"
                                                 Value="Output">
                                        <Setter Property="Source"
                                                Value="SendIcon"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Image"
                                                 Binding="{Binding Type}"
                                                 Value="Self">
                                        <Setter Property="Source"
                                                Value="CircleIcon"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Image"
                                                 Binding="{Binding Type}"
                                                 Value="SwapPayment">
                                        <Setter Property="Source"
                                                Value="ConversionIcon"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Image"
                                                 Binding="{Binding Type}"
                                                 Value="SwapRedeem">
                                        <Setter Property="Source"
                                                Value="ConversionIcon"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Image"
                                                 Binding="{Binding Type}"
                                                 Value="SwapRefund">
                                        <Setter Property="Source"
                                                Value="ConversionIcon"/>
                                    </DataTrigger>
                                </Image.Triggers>
                            </Image>
                            <Label Grid.Column="1"
                                   FontFamily="{DynamicResource MediumFont}"
                                   VerticalOptions="EndAndExpand">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Type}"
                                                 Value="Output">
                                        <Setter Property="Text"
                                                Value="Sent"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Type}"
                                                 Value="Input">
                                        <Setter Property="Text"
                                                Value="Received"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Type}"
                                                 Value="Self">
                                        <Setter Property="Text"
                                                Value="Transaction to yourself"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Type}"
                                                 Value="SwapPayment">
                                        <Setter Property="Text"
                                                Value="Swap"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Type}"
                                                 Value="SwapRedeem">
                                        <Setter Property="Text"
                                                Value="Swap"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Type}"
                                                 Value="SwapRefund">
                                        <Setter Property="Text"
                                                Value="Swap"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                            <Label Grid.Column="2"
                                   Grid.RowSpan="2"
                                   Text="{Binding Amount, StringFormat='{0}'}"
                                   FontFamily="{DynamicResource BoldFont}"
                                   FontSize="18"
                                   HorizontalOptions="End"
                                   VerticalOptions="Center"
                                   VerticalTextAlignment="Center">
                                <Label.Triggers>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Type}"
                                                 Value="Input">
                                        <Setter Property="TextColor"
                                                Value="Green"/>
                                        <Setter Property="FormattedText">
                                            <Setter.Value>
                                                <FormattedString>
                                                    <Span Text="{Binding Amount, StringFormat='+{0:0.#####}'}"/>
                                                    <Span Text=" "/>
                                                    <Span Text="{Binding Currency.Name}"/>
                                                </FormattedString>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Type}"
                                                 Value="Output">
                                        <Setter Property="TextColor"
                                                Value="Red"/>
                                        <Setter Property="FormattedText">
                                            <Setter.Value>
                                                <FormattedString>
                                                    <Span Text="{Binding Amount, StringFormat='{0:0.#####}'}"/>
                                                    <Span Text=" "/>
                                                    <Span Text="{Binding Currency.Name}"/>
                                                </FormattedString>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Type}"
                                                 Value="Self">
                                        <Setter Property="TextColor"
                                                Value="Red"/>
                                        <Setter Property="FormattedText">
                                            <Setter.Value>
                                                <FormattedString>
                                                    <Span Text="{Binding Amount, StringFormat='{0:0.#####}'}"/>
                                                    <Span Text=" "/>
                                                    <Span Text="{Binding Currency.Name}"/>
                                                </FormattedString>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Type}"
                                                 Value="SwapPayment">
                                        <Setter Property="FormattedText">
                                            <Setter.Value>
                                                <FormattedString>
                                                    <Span Text="{Binding Amount, StringFormat='{0:0.#####}'}"/>
                                                    <Span Text=" "/>
                                                    <Span Text="{Binding Currency.Name}"/>
                                                </FormattedString>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Type}"
                                                 Value="SwapRedeem">
                                        <Setter Property="FormattedText">
                                            <Setter.Value>
                                                <FormattedString>
                                                    <Span Text="{Binding Amount, StringFormat='{0:0.#####}'}"/>
                                                    <Span Text=" "/>
                                                    <Span Text="{Binding Currency.Name}"/>
                                                </FormattedString>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Type}"
                                                 Value="SwapRefund">
                                        <Setter Property="FormattedText">
                                            <Setter.Value>
                                                <FormattedString>
                                                    <Span Text="{Binding Amount, StringFormat='{0:0.#####}'}"/>
                                                    <Span Text=" "/>
                                                    <Span Text="{Binding Currency.Name}"/>
                                                </FormattedString>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                            <Label Grid.Row="1"
                                   Grid.Column="1"
                                   VerticalOptions="StartAndExpand"
                                   FontFamily="{DynamicResource LightFont}"
                                   TextColor="Gray"
                                   FontSize="12"
                                   LineBreakMode="MiddleTruncation">
                                <Label.Triggers>             
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Type}"
                                                 Value="Output">
                                        <Setter Property="FormattedText">
                                            <Setter.Value>
                                                <FormattedString>
                                                    <Span Text="To: "/>
                                                    <Span Text="{Binding To, FallbackValue='Unknown'}"/>
                                                </FormattedString>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Type}"
                                                 Value="Input">
                                        <Setter Property="FormattedText">
                                            <Setter.Value>
                                                <FormattedString>
                                                    <Span Text="From: "/>
                                                    <Span Text="{Binding From, FallbackValue='Unknown'}"/>
                                                </FormattedString>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Type}"
                                                 Value="Self">
                                        <Setter Property="FormattedText">
                                            <Setter.Value>
                                                <FormattedString>
                                                    <Span Text="Address: "/>
                                                    <Span Text="{Binding To, FallbackValue='Unknown'}"/>
                                                </FormattedString>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Type}"
                                                 Value="SwapPayment">
                                        <Setter Property="FormattedText">
                                            <Setter.Value>
                                                <FormattedString>
                                                    <Span Text="{Binding Description, FallbackValue='Unknown'}"/>
                                                </FormattedString>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Type}"
                                                 Value="SwapRedeem">
                                        <Setter Property="FormattedText">
                                            <Setter.Value>
                                                <FormattedString>
                                                    <Span Text="{Binding Description, FallbackValue='Unknown'}"/>
                                                </FormattedString>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Label"
                                                 Binding="{Binding Type}"
                                                 Value="SwapRefund">
                                        <Setter Property="FormattedText">
                                            <Setter.Value>
                                                <FormattedString>
                                                    <Span Text="{Binding Description, FallbackValue='Unknown'}"/>
                                                </FormattedString>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                        </Grid>
                    </ViewCell>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </StackLayout>
</ContentPage>