<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:ffimageloadingsvg="clr-namespace:FFImageLoading.Svg.Forms;assembly=FFImageLoading.Svg.Forms"
             xmlns:resources="clr-namespace:atomex.Resources"
             x:Class="atomex.ConversionsListPage"
             Title="{x:Static resources:AppResources.ConfirmationLabel}">
    <ContentPage.Content>
        <StackLayout>
            <StackLayout VerticalOptions="FillAndExpand"
                         Padding="20"
                         IsVisible="False">
                <StackLayout.Triggers>
                    <DataTrigger TargetType="StackLayout"
                                 Binding="{Binding Swaps.Count}"
                                 Value="0">
                        <Setter Property="IsVisible"
                                Value="True"/>
                    </DataTrigger>
                </StackLayout.Triggers>
                <ffimageloadingsvg:SvgCachedImage Source="Spin-arrow.svg"       
                                                  HeightRequest="48"
                                                  WidthRequest="48"
                                                  VerticalOptions="EndAndExpand"
                                                  HorizontalOptions="CenterAndExpand"/>
                <Label Text="{x:Static resources:AppResources.NoSwapsLabel}"
                       FontFamily="{DynamicResource RegularFont}"
                       HorizontalTextAlignment="Center"
                       VerticalOptions="StartAndExpand"
                       FontSize="22"
                       Margin="0,20"/>
            </StackLayout>
        
            <ListView ItemsSource="{Binding GroupedSwaps}"
                      ItemTapped="OnListViewItemTapped"
                      BackgroundColor="{DynamicResource MainBackgroundColor}"
                      IsGroupingEnabled="True"
                      HasUnevenRows="True"
                      SeparatorVisibility="None"
                      Footer="">
                <ListView.Triggers>
                    <DataTrigger TargetType="ListView"
                                 Binding="{Binding GroupedSwaps.Count}"
                                 Value="0">
                        <Setter Property="IsVisible"
                                Value="False"/>
                    </DataTrigger>
                </ListView.Triggers>
                <ListView.GroupHeaderTemplate>
                    <DataTemplate>
                        <ViewCell Height="20">
                            <Label Text="{Binding Date, StringFormat='{}{0:dd.MM.yyyy}'}"
                                   BackgroundColor="{DynamicResource AdditionalBackgroundColor}"
                                   TextColor="{DynamicResource AdditionalTextColor}"
                                   Padding="10,0"
                                   FontSize="12"
                                   VerticalTextAlignment="Center"
                                   VerticalOptions="CenterAndExpand"
                                   />
                         </ViewCell>
                    </DataTemplate>
                </ListView.GroupHeaderTemplate>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell>
                            <Grid Padding="8"
                                  RowSpacing="0"
                                  ColumnSpacing="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="50"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1.5*" />
                                    <ColumnDefinition Width="6*" />
                                    <ColumnDefinition Width="2.5*" />
                                </Grid.ColumnDefinitions> 
                                <RelativeLayout VerticalOptions="CenterAndExpand">
                                    <ffimageloadingsvg:SvgCachedImage Source="{Binding FromCurrencyCode, StringFormat='{0}.svg'}"
                                                                      x:Name="FromCurrencyIcon"
                                                                      HeightRequest="32"
                                                                      WidthRequest="32"/>
                                    <ffimageloadingsvg:SvgCachedImage Source="{Binding ToCurrencyCode, StringFormat='{0}.svg'}"
                                                                      HeightRequest="32"
                                                                      WidthRequest="32"
                                                                      RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToView,ElementName=FromCurrencyIcon,Property=Y,Factor=1,Constant=0}"
                                                                      RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToView,ElementName=FromCurrencyIcon,Property=X,Factor=1,Constant=+18}"/>
                                </RelativeLayout>
                                <Label Grid.Column="1"
                                       VerticalTextAlignment="Center"
                                       Padding="2">
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span Text="{x:Static resources:AppResources.Convert}"
                                                  FontFamily="{DynamicResource RegularFont}"
                                                  FontSize="12"/>
                                            <Span Text="{Binding FromAmount, StringFormat=' {0:0.####}'}"
                                                  FontFamily="{DynamicResource BoldFont}"
                                                  FontSize="14"/>
                                            <Span Text="{Binding FromCurrencyCode, StringFormat=' {0}'}"
                                                  FontFamily="{DynamicResource BoldFont}"
                                                  FontSize="12"/>
                                            <Span Text=" to "
                                                  FontFamily="{DynamicResource RegularFont}"
                                                  FontSize="12"/>
                                            <Span Text="{Binding ToAmount, StringFormat='{0:0.####}'}"
                                                  FontFamily="{DynamicResource BoldFont}"
                                                  FontSize="14"/>
                                            <Span Text="{Binding ToCurrencyCode, StringFormat=' {0}'}"
                                                  FontFamily="{DynamicResource BoldFont}"
                                                  FontSize="12"/>
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>
                                <Frame Grid.Column="2"
                                       CornerRadius="8"
                                       Padding="2"
                                       Margin="0,10"
                                       HasShadow="False">
                                    <Frame.Triggers>
                                        <DataTrigger TargetType="Frame"
                                                     Binding="{Binding State}"
                                                     Value="Completed">
                                            <Setter Property="BackgroundColor"
                                                    Value="{DynamicResource ComletedStateColor}"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Frame"
                                                     Binding="{Binding State}"
                                                     Value="In Progress">
                                            <Setter Property="BackgroundColor"
                                                    Value="{DynamicResource InProgressStateColor}"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Frame"
                                                     Binding="{Binding State}"
                                                     Value="Canceled">
                                            <Setter Property="BackgroundColor"
                                                    Value="{DynamicResource CanceledStateColor}"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Frame"
                                                     Binding="{Binding State}"
                                                     Value="Refunded">
                                            <Setter Property="BackgroundColor"
                                                    Value="{DynamicResource RefundedStateColor}"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Frame"
                                                     Binding="{Binding State}"
                                                     Value="Unsettled">
                                            <Setter Property="BackgroundColor"
                                                    Value="{DynamicResource UnsettledStateColor}"/>
                                        </DataTrigger>
                                    </Frame.Triggers>
                                    <Label TextColor="White"
                                           VerticalTextAlignment="Center"
                                           HorizontalTextAlignment="Center"
                                           BackgroundColor="Transparent"
                                           FontFamily="{DynamicResource BoldFont}"
                                           Text="{Binding State}"
                                           FontSize="14"/>
                                </Frame>  
                            </Grid>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <Button Text="{x:Static resources:AppResources.CreateSwapButton}"
                    Style="{DynamicResource MainButtonStyle}"
                    Margin="20"
                    Clicked="OnCreateSwapButtonClicked"/>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>
