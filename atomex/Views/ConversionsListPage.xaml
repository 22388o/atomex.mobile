<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:helpers="clr-namespace:atomex.Helpers"
             xmlns:converters="clr-namespace:atomex.Converters"
             xmlns:lottie="clr-namespace:Lottie.Forms;assembly=Lottie.Forms"
             x:Class="atomex.ConversionsListPage"
             x:Name="BindingContextPage"
             Title="{helpers:Translate SwapListPageTitle}">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:EqualsConverter x:Key="EqualsConverter"/>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <StackLayout BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}">
            <StackLayout VerticalOptions="FillAndExpand"
                         Padding="20"
                         IsVisible="False">
                <StackLayout.Triggers>
                    <DataTrigger TargetType="StackLayout"
                                 Binding="{Binding Swaps.Count}"
                                 Value="0">
                        <Setter Property="IsVisible"
                                Value="True"/>
                    </DataTrigger>
                </StackLayout.Triggers>
                <Image Source="ic_redeem"
                       HeightRequest="48"
                       WidthRequest="48"
                       VerticalOptions="EndAndExpand"
                       HorizontalOptions="CenterAndExpand"/>
                <StackLayout VerticalOptions="StartAndExpand"
                             Margin="20">
                    <Label Text="{helpers:Translate NoSwapsLabel}"
                           FontFamily="{DynamicResource RegularFont}"
                           HorizontalTextAlignment="Center"
                           TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                           FontSize="18"/>
                    <Label Text="{helpers:Translate SwapHistoryText}"
                           TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                           FontFamily="{DynamicResource RegularFont}"
                           FontSize="14"
                           HorizontalTextAlignment="Center"/>
                </StackLayout>
            </StackLayout>
            <ListView ItemsSource="{Binding GroupedSwaps}"
                      IsGroupingEnabled="True"
                      SelectionMode="None"
                      HasUnevenRows="True"
                      SeparatorVisibility="Default"
                      SeparatorColor="{AppThemeBinding Dark={StaticResource ListViewSeparatorColorDark}, Light={StaticResource ListViewSeparatorColor}}"
                      VerticalOptions="StartAndExpand"
                      BackgroundColor="{AppThemeBinding Dark={StaticResource MainBackgroundColorDark}, Light={StaticResource MainBackgroundColor}}"
                      CachingStrategy="RecycleElement"
                      Footer="">
                <ListView.Triggers>
                    <DataTrigger TargetType="ListView"
                                 Binding="{Binding GroupedSwaps.Count}"
                                 Value="0">
                        <Setter Property="IsVisible"
                                Value="False"/>
                    </DataTrigger>
                </ListView.Triggers>
                <ListView.GroupHeaderTemplate>
                    <DataTemplate>
                        <ViewCell Height="20">
                            <StackLayout HeightRequest="20"
                                         BackgroundColor="{AppThemeBinding Dark={StaticResource AdditionalBackgroundColorDark}, Light={StaticResource AdditionalBackgroundColor}}"
                                         Spacing="0">
                                <Label Text="{Binding Date, StringFormat='{}{0:dd.MM.yyyy}'}"
                                       BackgroundColor="{AppThemeBinding Dark={StaticResource AdditionalBackgroundColorDark}, Light={StaticResource AdditionalBackgroundColor}}"
                                       TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                       FontFamily="{DynamicResource RegularFont}"
                                       Padding="10,0"
                                       FontSize="12"
                                       VerticalTextAlignment="Center"
                                       VerticalOptions="CenterAndExpand"/>
                            </StackLayout>
                         </ViewCell>
                    </DataTemplate>
                </ListView.GroupHeaderTemplate>
                <ListView.FooterTemplate>
                    <DataTemplate>
                        <StackLayout>
                            <Label Text="{helpers:Translate SwapHistoryText}"
                                   BackgroundColor="Transparent"
                                   TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                   FontFamily="{DynamicResource RegularFont}"
                                   Padding="20,10"
                                   FontSize="14"
                                   VerticalTextAlignment="Center"
                                   HorizontalTextAlignment="Center"/>
                        </StackLayout>
                    </DataTemplate>
                </ListView.FooterTemplate>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell>
                            <Grid Padding="8"
                                  RowSpacing="0"
                                  ColumnSpacing="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="25"/>
                                    <RowDefinition Height="25"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="3*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="3*" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>
                                <Grid.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding BindingContext.SelectSwapCommand, Source={x:Reference BindingContextPage}}"
                                                          Tapped="OnItemTapped"
                                                          CommandParameter="{Binding .}"/>
                                </Grid.GestureRecognizers>
                                <Image Source="{Binding FromCurrencyCode}"
                                       Grid.RowSpan="2"
                                       WidthRequest="32"
                                       HeightRequest="32"
                                       VerticalOptions="CenterAndExpand"/>
                                <Label Grid.Column="1"
                                       Text="{Binding FromCurrencyCode}"
                                       TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                                       FontSize="14"
                                       FontFamily="{DynamicResource RegularFont}"
                                       VerticalTextAlignment="End"
                                       HorizontalTextAlignment="Start"/>
                                <Label Grid.Row="1"
                                       Grid.Column="1"
                                       Text="{Binding FromAmount, StringFormat='{0:0.000000000}'}"
                                       TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                       FontSize="12"
                                       FontFamily="{DynamicResource RegularFont}"
                                       VerticalTextAlignment="Start"
                                       HorizontalTextAlignment="Start"/>
                                <Image Grid.Column="2"
                                       Grid.RowSpan="3"
                                       WidthRequest="24"
                                       VerticalOptions="CenterAndExpand">
                                    <Image.Triggers>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding State}"
                                                     Value="Completed">
                                            <Setter Property="Source"
                                                    Value="ConvertArrow"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding State}"
                                                     Value="In Progress">
                                            <Setter Property="Source"
                                                    Value="ConvertArrow"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding State}"
                                                     Value="Canceled">
                                            <Setter Property="Source"
                                                    Value="ConvertArrowFailure"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding State}"
                                                     Value="Refunded">
                                            <Setter Property="Source"
                                                    Value="ConvertArrowFailure"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding State}"
                                                     Value="Unsettled">
                                            <Setter Property="Source"
                                                    Value="ConvertArrowFailure"/>
                                        </DataTrigger>
                                    </Image.Triggers>
                                </Image>
                                <Image Source="{Binding ToCurrencyCode}"
                                       Grid.Column="3"
                                       Grid.RowSpan="2"
                                       WidthRequest="32"
                                       HeightRequest="32"
                                       VerticalOptions="CenterAndExpand"/>
                                <Label Grid.Column="4"
                                       Text="{Binding ToCurrencyCode}"
                                       TextColor="{AppThemeBinding Dark={StaticResource MainTextColorDark}, Light={StaticResource MainTextColor}}"
                                       FontSize="14"
                                       FontFamily="{DynamicResource RegularFont}"
                                       VerticalTextAlignment="End"
                                       HorizontalTextAlignment="Start"/>
                                <Label Grid.Row="1"
                                       Grid.Column="4"
                                       Text="{Binding ToAmount, StringFormat='{0:0.000000000}'}"
                                       TextColor="{AppThemeBinding Dark={StaticResource AdditionalTextColorDark}, Light={StaticResource AdditionalTextColor}}"
                                       FontSize="12"
                                       FontFamily="{DynamicResource RegularFont}"
                                       VerticalTextAlignment="Start"
                                       HorizontalTextAlignment="Start"/>
                                <Image Grid.Column="5"
                                       Grid.RowSpan="2"
                                       WidthRequest="24"
                                       HeightRequest="24"
                                       VerticalOptions="CenterAndExpand">
                                    <Image.Triggers>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding State}"
                                                     Value="Completed">
                                            <Setter Property="Source"
                                                    Value="SwapCompleted"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding State}"
                                                     Value="In Progress">
                                            <Setter Property="Source"
                                                    Value="ic_status__empty"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding State}"
                                                     Value="Canceled">
                                            <Setter Property="Source"
                                                    Value="SwapCanceled"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding State}"
                                                     Value="Refunded">
                                            <Setter Property="Source"
                                                    Value="SwapCanceled"/>
                                        </DataTrigger>
                                        <DataTrigger TargetType="Image"
                                                     Binding="{Binding State}"
                                                     Value="Unsettled">
                                            <Setter Property="Source"
                                                    Value="SwapCanceled"/>
                                        </DataTrigger>
                                    </Image.Triggers>
                                </Image>
                                <lottie:AnimationView Grid.Column="5"
                                                      Grid.RowSpan="2"
                                                      WidthRequest="24"
                                                      HeightRequest="24"
                                                      Animation="{AppThemeBinding Dark=loader_dark__blue.json, Light=loader_light__blue.json}"
                                                      AnimationSource="AssetOrBundle"
                                                      ImageAssetsFolder="Assets/Animations"
                                                      AutoPlay="True"
                                                      RepeatMode="Infinite"
                                                      Speed="1"
                                                      VerticalOptions="Center"
                                                      HorizontalOptions="Center">
                                    <lottie:AnimationView.IsVisible>
                                        <Binding Path="State"
                                                 Mode="OneWay"
                                                 Converter="{StaticResource EqualsConverter}"
                                                 ConverterParameter="In Progress"/>
                                    </lottie:AnimationView.IsVisible>
                                </lottie:AnimationView>
                            </Grid>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <StackLayout VerticalOptions="End"
                         Spacing="0"
                         Margin="20,0,20,20">
                <Button Text="{helpers:Translate CreateSwapButton}"
                        Style="{DynamicResource MainButtonStyle}"
                        Command="{Binding CreateNewSwapCommand}"/>
            </StackLayout>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>
