<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:resources="clr-namespace:atomex.Resources"
             x:Class="atomex.BakerListPage"
             Title="{x:Static resources:AppResources.BakerListPageTitle}"
             BackgroundColor="{DynamicResource MainBackgroundColor}">
    <ContentPage.Content>
        <StackLayout Spacing="0"
                     VerticalOptions="FillAndExpand">
            <SearchBar Placeholder="{x:Static resources:AppResources.SearchBarPlaceholder}"
                       CancelButtonColor="{DynamicResource HintTextColor}"
                       PlaceholderColor="{DynamicResource HintTextColor}"
                       TextColor="{DynamicResource MainTextColor}"
                       BackgroundColor="{DynamicResource MainBackgroundColor}"
                       FontFamily="{DynamicResource RegularFont}"
                       FontSize="12"
                       TextTransform="Lowercase"
                       HorizontalTextAlignment="Start"
                       HeightRequest="70"
                       TextChanged="OnSearchBakerTextChanged"/>
            <Line X1="0"
                  Y1="0"
                  X2="600"
                  Y2="0"
                  Stroke="#e0e0e0"
                  StrokeThickness="1"
                  HorizontalOptions="FillAndExpand"/>
            <ListView ItemsSource="{Binding FromBakersList}"
                      ItemTapped="OnBakerTapped"
                      x:Name="BakersListView"
                      SeparatorVisibility="None"
                      HasUnevenRows="True"
                      VerticalOptions="FillAndExpand"
                      Footer="">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell Height="61">
                            <Grid Margin="0"
                                  Padding="10,0"
                                  ColumnSpacing="0"
                                  RowSpacing="0"
                                  BackgroundColor="{DynamicResource MainBackgroundColor}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30" />
                                    <RowDefinition Height="30" />
                                    <RowDefinition Height="1" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1.5*" />
                                    <ColumnDefinition Width="5*" />
                                    <ColumnDefinition Width="3.5*" />
                                </Grid.ColumnDefinitions>
                                <Image Grid.RowSpan="2"
                                       Source="{Binding Logo}"
                                       VerticalOptions="Center"
                                       HorizontalOptions="Center"
                                       Margin="0,12"/>
                                <StackLayout Grid.Column="1"
                                             Grid.RowSpan="2"
                                             VerticalOptions="Center"
                                             Padding="10,0,0,0"
                                             Spacing="0">
                                    <Label Text="{Binding Name}"
                                           VerticalTextAlignment="End"
                                           FontFamily="{DynamicResource BoldFont}"
                                           TextColor="{DynamicResource MainTextColor}"
                                           FontSize="14"/>
                                    <Label VerticalTextAlignment="Start"
                                           FontFamily="{DynamicResource LightFont}"
                                           TextColor="{DynamicResource MainTextColor}"
                                           FontSize="12">
                                        <Label.Triggers>
                                            <DataTrigger TargetType="Label"
                                                     Binding="{Binding Name}"
                                                     Value="Custom Baker">
                                                <Setter Property="IsVisible"
                                                        Value="False"/>
                                        </DataTrigger>
                                        </Label.Triggers>
                                        <Label.FormattedText>
                                            <FormattedString>
                                                <Span Text="{Binding EstimatedRoi, StringFormat='{0:P}'}"
                                                      TextColor="Green"/>
                                                <Span Text=" (min "/>
                                                <Span Text="{Binding MinDelegation}"/>
                                                <Span Text=" XTZ)"/>
                                            </FormattedString>
                                        </Label.FormattedText>
                                    </Label>
                                </StackLayout>
                                <StackLayout Grid.Column="2"
                                             Grid.RowSpan="2"
                                             VerticalOptions="Center"
                                             Padding="10,0,0,0"
                                             Spacing="0">
                                    <StackLayout.Triggers>
                                        <DataTrigger TargetType="StackLayout"
                                                     Binding="{Binding Name}"
                                                     Value="Custom Baker">
                                            <Setter Property="IsVisible"
                                                    Value="False"/>
                                        </DataTrigger>
                                </StackLayout.Triggers>
                                <Label Text="{x:Static resources:AppResources.Available}"
                                       VerticalTextAlignment="End"
                                       HorizontalTextAlignment="End"
                                       FontFamily="{DynamicResource LightFont}"
                                       FontSize="10">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label"
                                                     Binding="{Binding IsFull}"
                                                     Value="True">
                                            <Setter Property="IsVisible"
                                                    Value="False"/>
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                                <Label Text="{Binding StakingAvailable, StringFormat='{0:0}'}"
                                       VerticalTextAlignment="Start"
                                       HorizontalTextAlignment="End"
                                       FontFamily="{DynamicResource LightFont}"
                                       FontSize="12">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label"
                                                     Binding="{Binding IsFull}"
                                                     Value="True">
                                            <Setter Property="IsVisible"
                                                    Value="False"/>
                                        </DataTrigger>
                                    </Label.Triggers>
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span Text="{Binding StakingAvailable, StringFormat='{0:0}'}"/>
                                            <Span Text=" XTZ"/>
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>
                                <Label TextColor="{DynamicResource ErrorTextColor}"
                                       Text="Baker is full"
                                       FontFamily="{DynamicResource BoldFont}"
                                       VerticalTextAlignment="Center"
                                       HorizontalTextAlignment="End"
                                       FontSize="12"
                                       IsVisible="False">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label"
                                                     Binding="{Binding IsFull}"
                                                     Value="True">
                                            <Setter Property="IsVisible"
                                                    Value="True"/>
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                            </StackLayout>
                            <Line X1="0"
                                  Y1="0"
                                  X2="600"
                                  Y2="0"
                                  Stroke="#e0e0e0"
                                  StrokeThickness="1"
                                  Grid.Row="2"
                                  Grid.Column="1"
                                  Grid.ColumnSpan="2"/>
                            </Grid>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>

